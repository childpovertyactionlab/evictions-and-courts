show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~as.factor(show),
alpha = c(0, 0.1, 0.2, 0.3, 0.4),
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~as.factor(show),
opacity = c(0, 0.1, 0.2, 0.3, 0.4)
orientation = "h"
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~as.factor(show),
opacity = c(0, 0.1, 0.2, 0.3, 0.4),
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~as.factor(show),
alpha = 1,
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~as.factor(show),
alpha = 0.5,
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~as.factor(show),
alpha = opa,
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~as.factor(show),
alpha = ~opa,
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
time_count <- df %>%
st_drop_geometry() %>%
group_by(time) %>%
summarize(tc = n(), opa=opa)
View(df)
df <- df0 %>%
mutate(
group = factor(case_when(
jpRuled == "Plaintiff (landlord)" ~ paste0("Defendant appeared (", ct$showcount, ")"),
jpRuled == "Plaintiff by default (defendant no-show)" ~ paste0("Defendant did not appear (", ct$noshowcount, ")"),
TRUE ~ NA
), levels = c(
paste0("Defendant appeared (", ct$showcount, ")"),
paste0("Defendant did not appear (", ct$noshowcount, ")")
)),
lng = jitter(as.numeric(X), 0.001),
lat = jitter(as.numeric(Y), 0.001)
) %>%
filter(!is.na(lng), !is.na(lat)) %>%
sf::st_as_sf(coords = c("lng", "lat")) %>%
sf::st_set_crs(st_crs(isochrone)) %>%
st_join(isochrone) %>%
mutate(
time = factor(if_else(is.na(time), "More than 15", as.character(time)),
levels = c("5","10","15","More than 15")),
fill = if_else(is.na(fill), '#a36250', fill),
gfill = case_match(
group,
levels(group)[1] ~ '#133091',
levels(group)[2] ~ '#c22d23'
),
id = row_number()
)
time_count <- df %>%
st_drop_geometry() %>%
group_by(time) %>%
summarize(tc = n(), opa=opa)
time_count <- df %>%
st_drop_geometry() %>%
group_by(time) %>%
summarize(tc = n(), opa=first(opa))
View(time_count)
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " ")
))
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " ")
))
time_count <- df %>%
st_drop_geometry() %>%
group_by(time) %>%
summarize(tc = n(), opa=first(opa))
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " ")
))
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show)
time_count <- df %>%
st_drop_geometry() %>%
group_by(time) %>%
summarize(tc = n())
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " ")
))
time_count <- df %>%
st_drop_geometry() %>%
group_by(time) %>%
summarize(tc = n())
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " ")
))
View(show_time_count)
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " "),
opa = (if_else(is.na(opa), 0, opa) + 0.1) * 2
))
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " "),
opa = (ifelse(is.na(opa), 0, opa) + 0.1) * 2
))
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " "),
opa = if_else(is.na(opa), 0, opa)
))
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " ")),
opa = (if_else(is.na(opa), 0, opa) + 0.1) * 2
)
View(show_time_count)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~as.factor(show),
alpha = ~opa,
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~as.factor(show),
alpha = opa,
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
col2rgb(#133091)
col2rgb(#133091)
d
)
))))
col2rgb("#133091")
as.vector(col2rgb("#133091"))
rgb(as.vector(col2rgb("#133091")))
rgb(collapse(as.vector(col2rgb("#133091"))))
rgb(paste(as.vector(col2rgb("#133091")), collapse = ", "))
paste(as.vector(col2rgb("#133091")), collapse = ", ")
rgb(19,48,145)
as.integer(col2rgb("#133091"))
as.list(col2rgb("#133091"))
as.vector(col2rgb("#133091"))
list(as.vector(col2rgb("#133091")))
rgb(list(as.vector(col2rgb("#133091"))))
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " ")),
grgba = case_match(
group,
levels(group)[1] ~ rgb(19, 48, 145, opa*255, maxColorValue = 255),
levels(group)[2] ~ rgb(194, 45, 35, opa*255, maxColorValue = 255)
),
opa = (if_else(is.na(opa), 0, opa) + 0.1) * 2
)
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " ")),
grgba = case_match(
show,
1 ~ rgb(19, 48, 145, opa*255, maxColorValue = 255),
2 ~ rgb(194, 45, 35, opa*255, maxColorValue = 255)
),
opa = (if_else(is.na(opa), 0, opa) + 0.1) * 2
)
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " ")),
grgba = case_match(
show,
1~opa,
2~opa
),
# grgba = case_match(
#    show,
#    1 ~ rgb(19, 48, 145, opa*255, maxColorValue = 255),
#    2 ~ rgb(194, 45, 35, opa*255, maxColorValue = 255)
#  ),
opa = (if_else(is.na(opa), 0, opa) + 0.1) * 2
)
show_time_count <- df %>%
st_drop_geometry() %>%
left_join(time_count, by = "time") %>%
group_by(time, show) %>%
summarize(n = n(), prop = n / first(tc), opa = first(opa)) %>%
mutate(time = paste(time, "min."),
time = case_match(
time,
"5 min." ~ "Less than 5 min. ",
"10 min." ~ "5 to 10 min. ",
"15 min." ~ "10 to 15 min. ",
time ~ paste0(time, " ")),
opa = (if_else(is.na(opa), 0, opa) + 0.1) * 2,
grgba = case_match(
show,
1 ~ rgb(19, 48, 145, opa*255, maxColorValue = 255),
2 ~ rgb(194, 45, 35, opa*255, maxColorValue = 255)
)
)
View(show_time_count)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~as.factor(show),
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = ~grgba,
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
color = grgba,
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
show_time_count %>%
plot_ly(
type = "bar",
x = ~prop,
y = ~time,
marker = list(color = I(show_time_count$grgba)),
orientation = "h"
) %>%
layout(
barmode = 'stack',
showlegend = FALSE,
yaxis = list(title = NA,
categoryorder = "array",
categoryarray = c( "More than 15 min. ",
"10 to 15 min. ",
"5 to 10 min. ",
"Less than 5 min. "))
)
